# Allow a small number of duplicate method calls.
DuplicateMethodCall:
  max_calls: 5

# Don't force comments on classes / modules. In most cases the class name
# provides adequate info.
IrresponsibleModule:
  enabled: false

# Disable unused parameter checks. These can occur a bit (e.g. in receive
# handlers) where it's nicer to keep standardisation of method signatures across
# modules.
UnusedParameters:
  enabled: false

# Allow slightly longer methods than the default to accomodate sane levels of
# sequential actions.
TooManyStatements:
  max_statements: 30

# Increase max method threshold to accomandate devices with a larger number of
# interaction points.
TooManyMethods:
  max_methods: 30

# Nil checks / safe navigation operator are useful for parsing of module
# settings of unknown validity.
NilCheck:
  enabled: false

# Boolean switches on state based methods (such as power and mute) are useful.
BooleanParameter:
  enabled: false
ControlParameter:
  enabled: false

# Allow for a larger number of constants for protocol definitions.
TooManyConstants:
  max_constants: 20

# Suppress warning about parameter length within reason.
LongParameterList:
  max_params: 4

# Prevent from flagging multiple calls to utility methods
# (e.g. is_affirmative?).
RepeatedConditional:
  enabled: false

# Allow for device model numbers to be used as module names.
UncommunicativeModuleName:
  enabled: false

# Support private, pure functions
UtilityFunction:
  public_methods_only: true
